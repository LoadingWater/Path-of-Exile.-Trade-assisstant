<Window x:Class="GUI.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:GUI"
        mc:Ignorable="d"
        Title="Trade assisstant" MinHeight="480" MinWidth="640"
        d:DesignWidth="1290" d:DesignHeight="728"
        FontFamily="{StaticResource FontingSmallCaps}"
        FontSize="20"
        FontStretch="UltraCondensed"
        LocationChanged="Window_LocationChanged"
        Loaded="Window_Loaded">
    
    <Grid Background="{StaticResource DarkBrownColor}">
        <Grid.RowDefinitions>
            <RowDefinition Height="*"/>
            <RowDefinition Height="30"/>
        </Grid.RowDefinitions>
        
        <!--region TabControl-->
        <TabControl x:Name="MainTabControl"/>
        <!--endregion TabControl-->

        <!--region Down definition-->
        <Grid Grid.Row="1">
            
            <Grid.ColumnDefinitions>
                <ColumnDefinition MinWidth="150" MaxWidth="300"/>
                <ColumnDefinition MinWidth="200" MaxWidth="300"/>
                <ColumnDefinition MinWidth="150" MaxWidth="300"/>
                <ColumnDefinition MinWidth="150" MaxWidth="300"/>
                <ColumnDefinition MinWidth="150" MaxWidth="300"/>
                <ColumnDefinition MinWidth="150" MaxWidth="300"/>
                <ColumnDefinition MinWidth="150" MaxWidth="300"/>
            </Grid.ColumnDefinitions>

            <!--region EnterPoeID-->
            <Border BorderBrush="{StaticResource BorderColor}"
                    BorderThickness="{StaticResource BorderThickness}"
                    Background="{StaticResource BrownButtonColor}">
                <TextBox Name="EnterPoEID"
                         Margin="3"
                         FontSize="15"
                         Text="{Binding Path=GuiData.Poesessid, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                         GotFocus="EnterPoEID_GotFocus"
                         LostFocus="EnterPoEID_LostFocus">
                </TextBox>
            </Border>
            <!--endregion EnterPoeID-->

            <!--region Leagues-->
            <ComboBox Name="Leagues" 
                      Grid.Column="1" 
                      Grid.Row="2"
                      ItemsSource="{Binding Path=GuiData.Leagues, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}"
                      SelectedIndex="0">
            </ComboBox>
            <!--endregion Leagues-->

            <!--region GetItems-->
            <Button x:Name="GetItems"
                    Grid.Column="2"
                    Grid.Row="0"
                    Content="Get items"
                    Click="Get_items_Click">
            </Button>
            <!--endregion GetItems-->

            <!--region RefreshButton-->
            <Button Name="RefreshButton"
                    Grid.Column="4"
                    Grid.Row="0"
                    Content="Refresh"/>
            <!--endregion RefreshButton-->

            <!--region UpdateUi-->
            <Button Name="UpdateUi" Grid.Column="3" Content="Update UI" Click="Update_UI_Click"/>
            <!--endregion UpdateUi-->

            <!--region RefreshEveryButton-->
            <ComboBox Name="RefreshEveryButton"  Grid.Column="5" Grid.Row="0">
                <ComboBoxItem Content="5 minute" IsSelected="False"/>
                <ComboBoxItem Content="3 minute" IsSelected="False"/>
                <ComboBoxItem Content="2 minute" IsSelected="False"/>
                <ComboBoxItem Content="1 minute" IsSelected="True"/>
            </ComboBox>
            <!--endregion RefreshEveryButton-->

            <!--region Settings-->
            <ToggleButton x:Name="Settings" Grid.Column="6"
                          ClickMode="Press"
                          Background="{StaticResource BrownButtonColor}" 
                          BorderBrush="{StaticResource BorderColor}" 
                          BorderThickness="{StaticResource BorderThickness}">

                <ToggleButton.Style>
                    <Style TargetType="ToggleButton">
                        <Setter Property="Foreground" Value="White"/>
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="ToggleButton">
                                    <Border x:Name="Border" 
                                            Background="{StaticResource BrownButtonColor}"
                                            BorderBrush="{StaticResource BorderColor}"
                                            BorderThickness="{StaticResource BorderThickness}">
                                        <ContentPresenter Content="Settings" 
                                                          VerticalAlignment="Center"
                                                          HorizontalAlignment="Center"/>
                                    </Border>
                                    <ControlTemplate.Triggers>
                                        <Trigger Property="IsMouseOver" Value="True">
                                            <Setter Property="Background" TargetName="Border" Value="Gray"/>
                                        </Trigger>
                                    </ControlTemplate.Triggers>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                        <Style.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="FocusManager.FocusedElement" Value="{Binding ElementName=Settings}"/>
                            </Trigger>
                        </Style.Triggers>
                    </Style>
                </ToggleButton.Style>
                <!--region Popup-->
                <Popup x:Name="Pop"
                       Placement="Top"
                       StaysOpen="False"
                       PopupAnimation="None"
                       PlacementTarget="{Binding ElementName=Settings}"
                       Width="{Binding RelativeSource={RelativeSource AncestorType=ToggleButton}, Path=ActualWidth}"
                       IsOpen="{Binding ElementName=Settings, Path=IsChecked}">
                    <Border Background="{StaticResource BrownButtonColor}"
                            BorderBrush="{StaticResource BorderColor}"
                            BorderThickness="{StaticResource BorderThickness}">
                        <StackPanel Background="Red">
                            <StackPanel.Resources>
                                <Style x:Key="Check" TargetType="CheckBox">
                                    <Style.Triggers>
                                        <Trigger Property="IsMouseOver" Value="True">
                                            <Setter Property="Background" Value="Gray"/>
                                        </Trigger>
                                    </Style.Triggers>
                                </Style>
                            </StackPanel.Resources>
                            <Button Background="White" Content="sfsdfsdfsdfsd" />
                            <CheckBox Content="First" IsChecked="True" Style="{StaticResource Check}"/>
                            <CheckBox Content="First" IsChecked="True" Style="{StaticResource Check}"/>
                        </StackPanel>
                    </Border>
                </Popup>
                <!--endregion Popup-->
            </ToggleButton>
            <!--endregion Settings-->
        </Grid>
        <!--endregion Down definition-->
    </Grid>
</Window>